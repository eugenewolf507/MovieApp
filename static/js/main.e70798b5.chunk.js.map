{"version":3,"sources":["components/MovieItem/MovieItem.module.css","components/MovieDetails/MovieDetails.module.css","components/Header/header.module.css","pages/Movies/moviesPage.module.css","pages/NotFound/notFoundPage.module.css","images/logo.svg","components/ToMoviesButton/toMoviesButton.module.css","pages/MoviePage/moviePage.module.css","components/Footer/footer.module.css","components/Select/select.module.css","components/Favorites/favorites.module.css","components/MovieList/movieList.module.css","pages/About/aboutPage.module.css","components/MovieItem/movieItemAction.js","components/MovieItem/movieItemReducer.js","components/MovieDetails/movieDetailsAction.js","components/MovieDetails/movieDetailsFetchReducer.js","components/Select/selectActions.js","components/Select/selectReducer.js","components/MovieList/movieListActions.js","components/MovieList/MovieListReducer.js","redux/store.js","components/Header/Header.js","components/ToMoviesButton/ToMoviesButton.js","utils/api.js","components/MovieDetails/movieDetailsOperations.js","redux/moviesSelectors.js","components/MovieDetails/MovieDetails.js","components/MovieDetails/MovieDetailsContainer.js","pages/MoviePage/MoviePage.js","components/Footer/Footer.js","redux/selectorSelectors.js","components/Select/Select.js","components/Select/SelectContainer.js","components/Favorites/Favorites.js","components/Favorites/FavoritesContainer.js","components/MovieItem/MovieItem.js","components/MovieItem/MovieItemContainer.js","components/MovieList/MovieList.js","components/MovieList/MovieListContainer.js","components/MovieList/movieListOperations.js","pages/Movies/MoviesPage.js","pages/About/AboutPage.js","pages/NotFound/NotFoundPage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Type","movieItemReducer","state","type","payload","filter","item","id","combineReducers","movie","loading","error","initialOption","value","label","selectReducer","action","movies","rootReducer","favorites","movieDetailsFetch","movieDetailsFetchReducer","selectValue","moviesList","moviesListReducer","enhancer","applyMiddleware","ReduxThunk","store","createStore","composeWithDevTools","Header","className","styles","appHeader","to","src","logo","appLogo","alt","appHeading","nav","ToMoviesButton","button","API_URL","API_KEY","POSTER_URL","fetchMovie","movieId","dispatch","axios","get","then","response","data","catch","fetchMovieError","getAllMovies","getSortBy","getAllFavorites","MovieDetails","this","props","matchMovieID","addToFavorite","deleteFromFavorite","movieItem","title","poster_path","poster","aboutText","vote_average","vote_count","popularity","overview","release_date","some","favorite","btnDel","onClick","btnAdd","Component","mapDispatchToProps","connect","MoviePage","match","wrapper","params","Footer","appFooter","href","target","rel","getSelectValue","options","Selector","selectAction","onChange","defaultProps","Favorites","length","map","MovieItem","linkTo","activeClassName","activeLinkTo","MovieList","fetchMovies","sortBy","prevProps","movieList","key","responce","results","fetchMoviesError","MoviesPage","mainwatch","asside","About","NotFound","notFoundStyles","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.e70798b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieItem\":\"MovieItem_movieItem__2TLK7\",\"title\":\"MovieItem_title__1RK2t\",\"poster\":\"MovieItem_poster__2O2L-\",\"linkTo\":\"MovieItem_linkTo__3CWzN\",\"activeLinkTo\":\"MovieItem_activeLinkTo__3CAgN\",\"button\":\"MovieItem_button__3FLHq\",\"btnDel\":\"MovieItem_btnDel__3nzJb\",\"btnAdd\":\"MovieItem_btnAdd__1nrRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieItem\":\"MovieDetails_movieItem__J1kAz\",\"title\":\"MovieDetails_title__vVdT3\",\"poster\":\"MovieDetails_poster__2jMp1\",\"button\":\"MovieDetails_button__1cf_P\",\"btnDel\":\"MovieDetails_btnDel__Hm135\",\"btnAdd\":\"MovieDetails_btnAdd__2SXR8\",\"aboutText\":\"MovieDetails_aboutText__i-ghy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"header_appHeader__3-6VC\",\"appLogo\":\"header_appLogo__f4SHS\",\"appHeading\":\"header_appHeading__39BnW\",\"nav\":\"header_nav__18TFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainwatch\":\"moviesPage_mainwatch__1chAy\",\"asside\":\"moviesPage_asside__FUkuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFoundStyles\":\"notFoundPage_notFoundStyles__3moEG\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c875b997.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"toMoviesButton_button__1kHuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"moviePage_wrapper__2L-jT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appFooter\":\"footer_appFooter__Yzh_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"select_wrapper__2dWVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"favorites_wrapper__2CcKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieList\":\"movieList_movieList__20gVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"aboutPage_wrapper__Sbtz6\"};","export const Type = {\n  ADDTOFAVORITE: 'ADDTOFAVORITE',\n  DELETEFROMFAVORITE: 'DELETEFROMFAVORITE',\n};\n\nexport const addToFavorite = movie => ({\n  type: Type.ADDTOFAVORITE,\n  payload: movie,\n});\n\nexport const deleteFromFavorite = movie => ({\n  type: Type.DELETEFROMFAVORITE,\n  payload: movie,\n});\n","import { Type } from './movieItemAction';\n\nconst movieItemReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.ADDTOFAVORITE:\n      return [...state, payload];\n\n    // rewrite with selectors\n    case Type.DELETEFROMFAVORITE:\n      return state.filter(item => item.id !== payload.id);\n    // return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default movieItemReducer;\n","export const Type = {\n  ADDTOFAVORITE: 'ADDTOFAVORITE',\n  DELETEFROMFAVORITE: 'DELETEFROMFAVORITE',\n  FETCH_MOVIE_START: 'FETCH_MOVIE_START',\n  FETCH_MOVIE_SUCCESS: 'FETCH_MOVIE_SUCCESS',\n  FETCH_MOVIE_ERROR: 'FETCH_MOVIE_ERROR',\n};\n\nexport const addToFavorite = movie => ({\n  type: Type.ADDTOFAVORITE,\n  payload: movie,\n});\n\nexport const deleteFromFavorite = movie => ({\n  type: Type.DELETEFROMFAVORITE,\n  payload: movie,\n});\n\nexport const fetchMovieStart = () => ({\n  type: Type.FETCH_MOVIE_START,\n});\n\nexport const fetchMovieSuccess = movie => ({\n  type: Type.FETCH_MOVIE_SUCCESS,\n  payload: movie,\n});\n\nexport const fetchMovieError = error => ({\n  type: Type.FETCH_MOVIE_ERROR,\n  payload: { error },\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './movieDetailsAction';\n\nconst movieReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_MOVIE_SUCCESS:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case Type.FETCH_MOVIE_START:\n      return true;\n\n    case Type.FETCH_MOVIE_SUCCESS:\n    case Type.FETCH_MOVIE_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_MOVIE_START:\n      return null;\n\n    case Type.FETCH_MOVIE_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  movie: movieReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","export const Type = {\n  CHANGE_SELECT: 'CHANGE_SELECT',\n};\n\nexport const selectAction = selectValue => ({\n  type: Type.CHANGE_SELECT,\n  payload: selectValue,\n});\n","import { Type } from './selectActions';\n\nconst initialOption = { value: 'top_rated', label: 'Top Rated' };\n\nconst selectReducer = (state = initialOption, action) => {\n  switch (action.type) {\n    case Type.CHANGE_SELECT:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default selectReducer;\n","export const Type = {\n  FETCH_POST_START: 'FETCH_POST_START',\n  FETCH_POST_SUCCESS: 'FETCH_POST_SUCCESS',\n  FETCH_POST_ERROR: 'FETCH_POST_ERROR',\n};\n\nexport const fetchMoviesStart = () => ({\n  type: Type.FETCH_POST_START,\n});\n\nexport const fetchMoviesSuccess = movies => ({\n  type: Type.FETCH_POST_SUCCESS,\n  payload: { movies },\n});\n\nexport const fetchMoviesError = error => ({\n  type: Type.FETCH_POST_ERROR,\n  payload: { error },\n});\n","import { combineReducers } from 'redux';\nimport { Type } from './movieListActions';\n\nconst moviesListReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_POST_SUCCESS:\n      return payload.movies;\n\n    default:\n      return state;\n  }\n};\n\nconst loadindReducer = (state = false, { type }) => {\n  switch (type) {\n    case Type.FETCH_POST_START:\n      return true;\n\n    case Type.FETCH_POST_ERROR:\n    case Type.FETCH_POST_SUCCESS:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_POST_START:\n      return null;\n\n    case Type.FETCH_POST_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  movies: moviesListReducer,\n  error: errorReducer,\n  loading: loadindReducer,\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport ReduxThunk from 'redux-thunk';\nimport movieItemReducer from '../components/MovieItem/movieItemReducer';\nimport movieDetailsFetchReducer from '../components/MovieDetails/movieDetailsFetchReducer';\nimport selectReducer from '../components/Select/selectReducer';\nimport moviesListReducer from '../components/MovieList/MovieListReducer';\n\nconst rootReducer = combineReducers({\n  favorites: movieItemReducer,\n  movieDetailsFetch: movieDetailsFetchReducer,\n  selectValue: selectReducer,\n  moviesList: moviesListReducer,\n});\n\nconst enhancer = applyMiddleware(ReduxThunk);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../images/logo.svg';\nimport styles from './header.module.css';\n\nconst Header = () => (\n  <header className={styles.appHeader}>\n    <Link to=\"/\">\n      <img src={logo} className={styles.appLogo} alt=\"logo\" />\n    </Link>\n    <h1 className={styles.appHeading}>Movie Library</h1>\n    <Link className={styles.nav} to=\"/about\">\n      About\n    </Link>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './toMoviesButton.module.css';\n\n// const handleGoToMovies = () => {\n//   this.props.history.push('/movies');\n// };\n\nconst ToMoviesButton = () => (\n  <Link to=\"/\">\n    <div className={styles.button}>\n      <span>Move to Movies</span>\n    </div>\n  </Link>\n);\n\nexport default ToMoviesButton;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY = \"5874acfd11651a28c55771624f7021f4\";\r\n\r\nexport const POSTER_URL = \"https://image.tmdb.org/t/p/w500\";\r\n","import axios from 'axios';\nimport { API_URL, API_KEY } from '../../utils/api';\nimport {\n  fetchMovieStart,\n  fetchMovieSuccess,\n  fetchMovieError,\n} from './movieDetailsAction';\n\nconst fetchMovie = movieId => dispatch => {\n  dispatch(fetchMovieStart());\n  axios\n    .get(`${API_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => {\n      dispatch(fetchMovieSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(fetchMovieError(error));\n    });\n};\nexport default fetchMovie;\n","export const getAllMovies = state => state.moviesList.movies;\n\nexport const getSortBy = state => state.selectValue.value;\n\nexport const getAllFavorites = state => state.favorites;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieDetails.module.css';\nimport { POSTER_URL } from '../../utils/api';\n\nclass MovieDetails extends Component {\n  componentDidMount() {\n    const { fetchMovie, matchMovieID } = this.props;\n    fetchMovie(matchMovieID);\n  }\n\n  render() {\n    const {\n      loading,\n      movie,\n      favorites,\n      addToFavorite,\n      deleteFromFavorite,\n    } = this.props;\n    return (\n      !loading && (\n        <div className={styles.movieItem}>\n          <h2 className={styles.title}>{movie.title} </h2>\n          <img\n            src={POSTER_URL + movie.poster_path}\n            alt={movie.title}\n            className={styles.poster}\n          />\n          <div className={styles.aboutText}>\n            <p>Rating: {movie.vote_average}</p>\n            <p>Votes: {movie.vote_count}</p>\n            <p>Popularity: {movie.popularity}</p>\n            <p>{movie.overview}</p>\n            <p>Release date {movie.release_date}</p>\n\n            {favorites.some(favorite => favorite.id === movie.id) ? (\n              <button\n                type=\"button\"\n                className={`${styles.btnDel} ${styles.button}`}\n                onClick={() => deleteFromFavorite(movie)}\n              >\n                Favorite\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className={`${styles.btnAdd} ${styles.button}`}\n                onClick={() => addToFavorite(movie)}\n              >\n                Favorite\n              </button>\n            )}\n          </div>\n        </div>\n      )\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    adult: PropTypes.bool,\n    backdrop_path: PropTypes.string,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n    id: PropTypes.number,\n    original_language: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    video: PropTypes.bool,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }).isRequired,\n  addToFavorite: PropTypes.func.isRequired,\n  deleteFromFavorite: PropTypes.func.isRequired,\n};\n\nexport default MovieDetails;\n","import { connect } from 'react-redux';\nimport { addToFavorite, deleteFromFavorite } from './movieDetailsAction';\nimport fetchMovie from './movieDetailsOperations';\nimport { getAllFavorites } from '../../redux/moviesSelectors';\nimport MovieDetails from './MovieDetails';\n\nconst mapStateToProps = state => ({\n  favorites: getAllFavorites(state),\n  movie: state.movieDetailsFetch.movie,\n  loading: state.movieDetailsFetch.loading,\n});\n\nconst mapDispatchToProps = { fetchMovie, addToFavorite, deleteFromFavorite };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetails);\n","import React from 'react';\nimport ToMoviesButton from '../../components/ToMoviesButton/ToMoviesButton';\nimport MovieDetails from '../../components/MovieDetails/MovieDetailsContainer';\nimport styles from './moviePage.module.css';\n\nconst MoviePage = props => {\n  const { match } = props;\n  return (\n    <div className={styles.wrapper}>\n      <MovieDetails matchMovieID={match.params.movieId} />\n      <ToMoviesButton />\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import React from 'react';\nimport styles from './footer.module.css';\n\nconst Footer = () => (\n  <footer className={styles.appFooter}>\n    Eugene Volkov - 2020 -{' '}\n    <a\n      href=\"https://github.com/eugenewolf507/MovieApp\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title=\"open in a new tab\"\n    >\n      GitHub Repositorie\n    </a>{' '}\n    -{' '}\n    <a\n      href=\"https://drive.google.com/file/d/1eQQFpes8XeaDaz5XY_5wyyE3LH3RWlI5/view?usp=sharing\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title=\"open in a new tab, and I will convert CV to HTML version little later\"\n    >\n      CV\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","const getSelectValue = state => state.selectValue;\nexport default getSelectValue;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './select.module.css';\n\nconst options = [\n  { value: 'top_rated', label: 'Top Rated' },\n  { value: 'now_playing', label: 'Now Playing' },\n  { value: 'popular', label: 'Popular' },\n  { value: 'upcoming', label: 'Upcoming' },\n];\n\nconst Selector = ({ value, selectAction }) => (\n  <div>\n    <Select\n      options={options}\n      value={value}\n      onChange={selectAction}\n      className={styles.wrapper}\n    />\n  </div>\n);\n\nSelector.defaultProps = {\n  value: {\n    value: 'popularity.asc',\n    label: 'Popularity Ascending',\n  },\n};\n\nSelector.propTypes = {\n  value: PropTypes.objectOf(PropTypes.string),\n  selectAction: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Selector;\n","import { connect } from 'react-redux';\nimport { selectAction } from './selectActions';\nimport getSelectValue from '../../redux/selectorSelectors';\nimport Selector from './Select';\n\nconst mapStateToProps = state => ({\n  value: getSelectValue(state),\n});\n\nconst mapDispatchToProps = { selectAction };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './favorites.module.css';\n\nconst Favorites = ({ favorites }) => (\n  <div className={styles.wrapper}>\n    <h3>Favorites:</h3>\n    {!favorites.length && <p>No favorite movies yet :(</p>}\n    <ul>\n      {favorites.map(favorite => (\n        <li>{favorite.title}</li>\n      ))}\n    </ul>\n  </div>\n);\n\nFavorites.propTypes = {\n  prop: PropTypes,\n};\n\nexport default Favorites;\n","import { connect } from 'react-redux';\nimport Favorites from './Favorites';\nimport { getAllFavorites } from '../../redux/moviesSelectors';\n\nconst mapStateToProps = state => ({\n  favorites: getAllFavorites(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport styles from './MovieItem.module.css';\nimport { POSTER_URL } from '../../utils/api';\n\nconst MovieItem = ({ movie, favorites, addToFavorite, deleteFromFavorite }) => (\n  <div className={styles.movieItem}>\n    <NavLink\n      to={`/movies/${movie.id}`}\n      className={styles.linkTo}\n      activeClassName={styles.activeLinkTo}\n    >\n      <h2 className={styles.title}>{movie.title} </h2>\n      <img\n        src={POSTER_URL + movie.poster_path}\n        alt={movie.title}\n        className={styles.poster}\n      />\n      <div>Rating: {movie.vote_average}</div>\n      <div>Votes: {movie.vote_count}</div>\n      <div>Popularity: {movie.popularity}</div>\n      <div>Release date: {movie.release_date}</div>\n      <br />\n    </NavLink>\n    {favorites.some(favorite => favorite.id === movie.id) ? (\n      <button\n        type=\"button\"\n        className={`${styles.btnDel} ${styles.button}`}\n        onClick={() => deleteFromFavorite(movie)}\n      >\n        Favorite\n      </button>\n    ) : (\n      <button\n        type=\"button\"\n        className={`${styles.btnAdd} ${styles.button}`}\n        onClick={() => addToFavorite(movie)}\n      >\n        Favorite\n      </button>\n    )}\n  </div>\n);\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    adult: PropTypes.bool,\n    backdrop_path: PropTypes.string,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n    id: PropTypes.number,\n    original_language: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    video: PropTypes.bool,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }).isRequired,\n  addToFavorite: PropTypes.func.isRequired,\n  deleteFromFavorite: PropTypes.func.isRequired,\n};\n\nexport default MovieItem;\n","import { connect } from 'react-redux';\nimport { addToFavorite, deleteFromFavorite } from './movieItemAction';\nimport { getAllFavorites } from '../../redux/moviesSelectors';\nimport MovieItem from './MovieItem';\n\nconst mapStateToProps = state => ({\n  favorites: getAllFavorites(state),\n});\n\nconst mapDispatchToProps = { addToFavorite, deleteFromFavorite };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieItem);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from '../MovieItem/MovieItemContainer';\nimport styles from './movieList.module.css';\n\nclass MovieList extends Component {\n  componentDidMount() {\n    const { fetchMovies, sortBy } = this.props;\n    fetchMovies(sortBy);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { fetchMovies, sortBy } = this.props;\n    if (prevProps.sortBy !== sortBy) fetchMovies(sortBy);\n  }\n\n  render() {\n    const { movies } = this.props;\n    return (\n      <ul className={styles.movieList}>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <MovieItem movie={movie} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  sortBy: PropTypes.string.isRequired,\n  fetchMovies: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    adult: PropTypes.bool,\n    backdrop_path: PropTypes.string,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n    id: PropTypes.number,\n    original_language: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    video: PropTypes.bool,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieList;\n","import { connect } from 'react-redux';\nimport MovieList from './MovieList';\nimport { getAllMovies, getSortBy } from '../../redux/moviesSelectors';\nimport fetchMovies from './movieListOperations';\n\nconst mapStateToProps = state => ({\n  movies: getAllMovies(state),\n  sortBy: getSortBy(state),\n});\n\nconst mapDispatchToProps = {\n  fetchMovies,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\n","import axios from 'axios';\nimport { API_URL, API_KEY } from '../../utils/api';\nimport {\n  fetchMoviesStart,\n  fetchMoviesSuccess,\n  fetchMoviesError,\n} from './movieListActions';\n\nconst fetchMovies = sortBy => dispatch => {\n  dispatch(fetchMoviesStart());\n  axios\n    .get(`${API_URL}/movie/${sortBy}?api_key=${API_KEY}&language=en-US&page=1`)\n    .then(responce => {\n      dispatch(fetchMoviesSuccess(responce.data.results));\n    })\n    .catch(error => {\n      dispatch(fetchMoviesError(error));\n    });\n};\n\nexport default fetchMovies;\n","import React from 'react';\nimport styles from './moviesPage.module.css';\nimport Selector from '../../components/Select/SelectContainer';\nimport Favorites from '../../components/Favorites/FavoritesContainer';\nimport MovieList from '../../components/MovieList/MovieListContainer';\n\nconst MoviesPage = () => (\n  <div className={styles.mainwatch}>\n    <div className={styles.asside}>\n      <Selector />\n      <Favorites />\n    </div>\n    <MovieList />\n  </div>\n);\n\nexport default MoviesPage;\n","import React from 'react';\nimport ToMoviesButton from '../../components/ToMoviesButton/ToMoviesButton';\nimport styles from './aboutPage.module.css';\n\nconst About = () => {\n  return (\n    <div className={styles.wrapper}>\n      <h2>About</h2>\n      Used in this SPA:\n      <ul>\n        <li>React</li>\n        <li>Redux</li>\n        <li>Router</li>\n        <li>Thunk</li>\n        <li>Axios</li>\n        <li>CSS Modules</li>\n        <li>Mobile-first</li>\n      </ul>\n      <ToMoviesButton />\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './notFoundPage.module.css';\n\nconst NotFound = () => (\n  <div>\n    <h2 className={styles.notFoundStyles}>Sorry, page not found :(</h2>\n    <p className={styles.notFoundStyles}>\n      Please, discover&nbsp;\n      <Link to=\"/\">movies list</Link>&nbsp;:)\n    </p>\n  </div>\n);\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport MoviePage from '../../pages/MoviePage/MoviePage';\nimport Footer from '../Footer/Footer';\nimport MoviesPage from '../../pages/Movies/MoviesPage';\nimport About from '../../pages/About/AboutPage';\nimport NotFound from '../../pages/NotFound/NotFoundPage';\n\nconst App = () => (\n  <div>\n    {/* ADD CSS Grids */}\n\n    {/* Error and Loading start */}\n    {/* {error && <p>Whoops, something went wrong: {error.message}</p>} */}\n    {/* {isLoading && <p>Loading...</p>} */}\n    {/* {isLoading && <p>Loading...</p>} */}\n    {/* Error and Loading end */}\n\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={MoviesPage} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movies/:movieId\" component={MoviePage} />\n      <Route path=\"/movies\" exact component={MoviesPage} />\n      <Route component={NotFound} />\n    </Switch>\n    <Footer />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename=\"/MovieApp\">\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}